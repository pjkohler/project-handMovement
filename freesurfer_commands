#!/bin/bash

export curDir=$PWD

# set up freesurfer subjects dir
export SUBJECTS_DIR_ORIG=${SUBJECTS_DIR} 
export SUBJECTS_DIR='/Volumes/Denali_4D2/kohler/fMRI_EXP/HandmovementLS/surfaces'
export DATA_DIR='/Volumes/Denali_4D2/kohler/fMRI_EXP/HandmovementLS/data'

export SUB_ID='LS'

cd ${DATA_DIR}
# use skull stripped anatomicals as input to freesurfer
export anatData1='anatomical_brain1.nii.gz'
export anatData2='anatomical_brain2.nii.gz'
recon-all -i ${anatData1} -i ${anatData2} -subjid ${SUB_ID}
# run freesurfer stage 1, w/o skull stripping 
# afterwards, make a symbolic link or copy T1.mgz to brainmask.auto.mgz 
# and a link from brainmask.auto.mgz to brainmask.mgz
recon-all -autorecon1 -noskullstrip -s ${SUB_ID} -3T -cubic
# run freesurfer stage 2
recon-all -autorecon2 -s ${SUB_ID} -3T -cubic
# after adding control points
recon-all -autorecon2-cp -s ${SUB_ID} -3T -cubic
# after editing white matter
recon-all -autorecon2-wm -autorecon3 -s ${SUB_ID} -3T -cubic
# after eding gray matter 
recon-all -autorecon-pial -subjid ${SUB_ID} -3T -cubic

# make freesurfer data AFNI/SUMA compatible
@SUMA_Make_Spec_FS -sid LS

# generate Wang atlas ROIs for LS
mriWangRoi.py LS --atlasdir ${SUBJECTS_DIR_ORIG}'/ROI_TEMPLATES/Wang2015/ProbAtlas_v4/subj_surf_all'

# generate KGS atlas ROIs for LS
mriKGSRoi.py LS --atlasdir ${SUBJECTS_DIR_ORIG}'/ROI_TEMPLATES/KGS2016'

# align freesurfer volume to experiment space
3dcopy anatomical_brain1.nii.gz anatomical_brain1+orig
@SUMA_AlignToExperiment -exp_anat anatomical_brain1+orig -surf_anat '../surfaces/'${SUB_ID}'/SUMA/'${SUB_ID}'_SurfVol+orig.' -strip_skull surf_anat -align_centers

# combine functional data into one file and move from volume space into surface space
export funcDataBad='BadHand_Level2_pe1.nii.gz'
export funcDataGood='GoodHand_Level2_pe1.nii.gz'
rm handCombined.nii.gz
rm *h.handCombined.niml.dset
3dTcat ${funcDataBad} ${funcDataGood} -prefix handCombined.nii.gz
3drefit -fbuc -redo_bstat -relabel_all_str 'BadHand GoodHand' handCombined.nii.gz 
mriVol2Surf.py ${SUB_ID} handCombined.nii.gz --surfvol ${SUB_ID}'_SurfVol_ns_Alnd_Exp+orig.'

# combine new set of functional data into one file and move from volume space into surface space
for type in Good Bad
	do	
	export beta=${type}'Hand_pe1.nii.gz'
	export zScore=${type}'Hand_zstat1.nii.gz'
	export pVal=${type}'Hand_p1.nii.gz'
	3dTcat ${beta} ${zScore} ${pVal} -prefix ${type}'Combined.nii.gz'
done

rm badCombined*.nii.gz
rm goodCombined*.nii.gz

# label
3drefit -fbuc -redo_bstat -relabel_all_str 'Bad_Beta Bad_Z Bad_p-val' badCombined.nii.gz
3drefit -fbuc -redo_bstat -relabel_all_str 'Good_Beta Good_Z Good_p-val' goodCombined.nii.gz
# bad threshold. z-score 3.09
3dcalc -a badCombined.nii.gz[1] -b badCombined.nii.gz -expr 'step(a-3.09) * b' -prefix badCombined_thresh.nii.gz 
# god threshold, z-score 3.25
3dcalc -a goodCombined.nii.gz[1] -b goodCombined.nii.gz -expr 'step(a-3.25) * b' -prefix goodCombined_thresh.nii.gz 

rm handCombined_new.nii.gz
rm *h.handCombined_new.niml.dset
3dTcat badCombined_thresh.nii.gz goodCombined_thresh.nii.gz -prefix handCombined_new.nii.gz
mriVol2Surf.py ${SUB_ID} handCombined_new.nii.gz --mask data --surfvol ${SUB_ID}'_SurfVol_ns_Alnd_Exp+orig.'

# generate ROI labels.
exprStr='amongst(a,1,2)+amongst(a,3,4)*2+amongst(a,5,6)*3+amongst(a,7,8,9,10,11)*(a-3)+amongst(a,13,14,15,16,17,18,19,20,21)*(a-4)+equals(a,24)*18'
for hemi in rh lh
	do 
		rm ${hemi}.wang_atlas_hand.niml.dset
		3dcopy ${SUBJECTS_DIR}/${SUB_ID}/wang_atlas/${hemi}.wang_atlas_cluster.niml.dset .
		3dcalc -a ${hemi}.wang_atlas_cluster.niml.dset -expr $exprStr -prefix ${hemi}.wang_atlas_hand.niml.dset
done

# reset freesurfer subjects dir
export SUBJECTS_DIR=${SUBJECTS_DIR_ORIG}

# return to original directory
cd $curDir